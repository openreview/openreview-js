name: OpenReview-js Tests

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]
  repository_dispatch:
    types: [openreview-api-updated]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.8.0
        with:
          mongodb-version: 6.0
          mongodb-replica-set: rs0
      - name: Configure sysctl Limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144
      - name: Start Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 7.6.0
      - name: Checkout openreview-py
        uses: actions/checkout@v3
        with:
          repository: openreview/openreview-py
          path: openreview-py
      - name: Checkout openreview-api
        uses: actions/checkout@v3
        with:
          repository: openreview/openreview-api
          token: ${{ secrets.PAT_OPENREVIEW_IESL }}
          path: openreview-api
      - name: Checkout openreview-js
        uses: actions/checkout@v3
        with:
          path: openreview-js
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
          cache-dependency-path: |
            openreview-api/package-lock.json
            openreview-js/package-lock.json
      - name: Setup openreview-py
        run: |
          cd openreview-py
          python -m pip install --upgrade pip
          pip install -e .
      - name: Setup openreview-api
        run: |
          cd openreview-api
          mkdir -p logs files/attachments files/pdfs files/temp
          npm ci
      - name: Run openreview-api
        run: |
          cd openreview-api
          npm run cleanStartJS &
      - name: Run TestCafe Tests
        run: |
          cd openreview-js
          npm run test

  # deploy:
  #   # Allow the job to fetch a GitHub ID token
  #   permissions:
  #     id-token: write
  #     contents: read

  #   runs-on: ubuntu-latest

  #   needs: build

  #   if: github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Authenticate with Google Cloud
  #       id: auth
  #       uses: google-github-actions/auth@v1
  #       with:
  #         workload_identity_provider: projects/997553930042/locations/global/workloadIdentityPools/github-identity-pool/providers/github-identity-provider
  #         service_account: github-actions@sunlit-realm-131518.iam.gserviceaccount.com
  #         create_credentials_file: true
  #         cleanup_credentials: true
  #         export_environment_variables: true
  #     - name: Setup gcloud
  #       uses: google-github-actions/setup-gcloud@v1
  #       with:
  #         project_id: ${{ secrets.GCP_PROJECT_ID }}
  #     - name: Deploy to dev
  #       run: |
  #         gcloud compute ssh --zone "us-central1-b" openreview@dev-instance-1 --command 'export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" && bash bin/deploy-web.sh' --quiet
  #         gcloud compute ssh --zone "us-central1-b" openreview@dev-instance-1 --command 'export NVM_DIR="$HOME/.nvm" && [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" && bash bin/deploy-openreview-py.sh' --quiet
